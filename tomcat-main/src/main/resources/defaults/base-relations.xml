
<relationships>
    <relation id="broaderContext">
        <displayName>has broader term</displayName>
        <predicate>hasBroader</predicate>
				<metaTypeField>broaderContextType</metaTypeField>
        <subject>n</subject>
        <object>1</object>
        <showsiblings>equivalentContexts:equivalentContext</showsiblings>
        <directional>false</directional>
				<!-- Groan - the code that handles generic relations uses services-url 
						 as the types against which it checks, while the hierarchy code 
						 uses the record id. Ugh. -->
        <sourceTypes>location,locationauthorities,personauthorities,person,citationauthorities,citation,organization,taxon,taxonomyauthority,concept,conceptauthorities,place,placeauthorities,collection-object,work,workauthorities</sourceTypes>
        <destinationTypes>location,locationauthorities,personauthorities,person,citationauthorities,citation,organization,taxon,taxonomyauthority,concept,conceptauthorities,place,placeauthorities,collection-object,work,workauthorities</destinationTypes>
        <showinui>true</showinui>
    </relation>
    <relation id="narrowerContexts">
        <inverseOf>broaderContext</inverseOf>
        <displayName>has narrower term</displayName>
        <predicate>hasNarrower</predicate>
				<metaTypeField>narrowerContextType</metaTypeField>
        <subject>1</subject>
        <object>n</object>
        <childname>narrowerContext</childname>
        <directional>false</directional>
				<!-- Groan - the code that handles generic relations uses services-url 
						 as the types against which it checks, while the hierarchy code 
						 uses the record id. Ugh. -->
        <sourceTypes>location,locationauthorities,personauthorities,person,citationauthorities,citation,organization,taxon,taxonomyauthority,concept,conceptauthorities,place,placeauthorities,collection-object,work,workauthorities</sourceTypes>
        <destinationTypes>location,locationauthorities,personauthorities,person,citationauthorities,citation,organization,taxon,taxonomyauthority,concept,conceptauthorities,place,placeauthorities,collection-object,work,workauthorities</destinationTypes>
        <showinui>true</showinui>
    </relation>
    <relation id="broader">
        <displayName>has broader term</displayName>
        <directional>true</directional>
        <type>hierarchical</type>    
        <sourceTypes>collectionobjects,intakes,acquisitions,loansin,loansout,movements,objectexit,media</sourceTypes>
        <destinationTypes>collectionobjects,intakes,acquisitions,loansin,loansout,movements,objectexit,media</destinationTypes>
    </relation>
    <relation id="affects">
        <displayName>affects</displayName>
        <directional>false</directional>
				<!-- Groan - the code that handles generic relations uses services-url 
						 as the types against which it checks, while the hierarchy code 
						 uses the record id. Ugh. -->
        <sourceTypes>collectionobjects,intakes,acquisitions,groups,loansin,loansout,movements,objectexit,media</sourceTypes>
        <destinationTypes>collectionobjects,intakes,acquisitions,groups,loansin,loansout,movements,objectexit,media</destinationTypes>
    </relation>
</relationships>
