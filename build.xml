<project name="app" default="quick-deploy">

    <!-- Facilitating rapid development, the 'quick-deploy' target syncs -->
    <!-- (potentially customized) Application layer files directly into the -->
    <!-- exploded war directory in Tomcat. This avoids the time it takes -->
    <!-- to build the project, and to generate and deploy a .war file. -->

    <!-- The 'environment' property must be declared to bring the values -->
    <!-- of system environment variables into Ant, prior to reading any -->
    <!-- properties files that may reference those values. -->
    <property environment="env"/>
    <!-- Set properties for this build -->
    <property name="config.destination" value="${env.CSPACE_JEESERVER_HOME}/lib" />
    <property name="app.resources.dir" location="tomcat-main/src/main/resources"/>

    <fileset id="app.defaults.with.standard.excludes" dir="${app.resources.dir}/defaults"
        defaultexcludes="false">
        <exclude name="**/.project" />
        <exclude name="**/.classpath" />
        <exclude name="**/.idea/**" />
        <exclude name="**/.settings/**" />
        <exclude name="**/.svn/**" />
        <exclude name="**/nbproject/**" />
        <exclude name="**/.git/**" />
        <exclude name="**/.gitignore" />
    </fileset>

    <fileset id="app.tenants.with.standard.excludes" dir="${app.resources.dir}/tenants"
        defaultexcludes="false">
        <exclude name="**/.project" />
        <exclude name="**/.classpath" />
        <exclude name="**/.idea/**" />
        <exclude name="**/.settings/**" />
        <exclude name="**/.svn/**" />
        <exclude name="**/nbproject/**" />
        <exclude name="**/.git/**" />
        <exclude name="**/.gitignore" />
    </fileset>

    <!-- quick-deploy indirectly uses Ant's 'sync' task, which ensures that the -->
    <!-- target directory will contain the same set of files and directories as -->
    <!-- the source directory. (Newer files in the target will not be overwritten, however.) -->
    
    <!-- Warning: Any 'dangling' files or directories in the target, which -->
    <!-- are not also present in the source, will be removed, unless those are -->
    <!-- specifically protected via 'preserveintarget' child element(s) within -->
    <!-- the relevant 'sync' elements below. -->
    <target name="quick-deploy"
        description="Sync app layer customizations to their deployed locations" 
        depends="sync-to-deployed-config-dir">
    </target>

    <target name="sync-to-deployed-config-dir"
        description="Syncs application layer config files to their deployed locations"
        depends="sync-defaults-to-deployed-config-dir,
                 sync-tenants-to-deployed-config-dir,
                 copy-cspace-config-to-deployed-config-dir">
    </target>

    <target name="sync-defaults-to-deployed-config-dir"
        description="Syncs application layer default config files to their deployed locations">
        <sync todir="${config.destination}/defaults" verbose="true">
            <fileset refid="app.defaults.with.standard.excludes"/>
            <preserveintarget>
            </preserveintarget>
        </sync>
	</target>

    <target name="sync-tenants-to-deployed-config-dir"
        description="Syncs application layer tenant config files to their deployed locations">

        <sync todir="${config.destination}/tenants" verbose="true">
            <fileset refid="app.tenants.with.standard.excludes"/>
            <preserveintarget>
                <!-- Some deployments create a host-settings.xml file, -->
                <!-- containing host-specific settings, in the target -->
                <!-- tenant directory. This file should not be deleted. -->
                <include name="**/host-settings.xml"/>
            </preserveintarget>
        </sync>
	</target>

    <target name="copy-cspace-config-to-deployed-config-dir"
        description="Copies cspace config files to their deployed locations">

        <!-- Delete existing cspace-config files from the destination, then -->
        <!-- copy them again from the source, renaming them during copying. -->
        <!-- These can't be synced, because they have different names in the -->
        <!-- source and destination. -->
        <delete>
            <fileset dir="${config.destination}" includes="cspace-config-*.xml"/>
        </delete>
        
        <copy todir="${config.destination}" overwrite="true">
            <fileset dir="${app.resources.dir}"/>
            <globmapper from="*-tenant.xml" to="cspace-config-*.xml"/>
        </copy>
	</target>
</project>
